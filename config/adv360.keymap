#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO



        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        JK_Escape {
            bindings = <&kp ESC>;
            key-positions = <41 42>;
        };
    };

    macros {
        right_arrow_macro: right_arrow_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp LS(PERIOD)>;
            label = "RIGHT_ARROW_MACRO";
        };

        right_eq_arrow_macro: right_eq_arrow_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp LS(PERIOD)>;
            label = "RIGHT_EQ_ARROW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none          &none    &none    &kp LC(B)  &none    &none  &none                                                                 &none      &none  &none  &none      &none    &none            &none
&kp LCTRL      &kp Q    &lt 8 W  &kp E      &kp R    &kp T  &none                                                                 &none      &kp Y  &kp U  &kp I      &kp O    &kp P            &kp LCTRL
&kp BACKSPACE  &lt 5 A  &lt 7 S  &lt 3 D    &lt 4 F  &kp G  &none  &kp BACKSPACE  &kp LEFT_COMMAND      &kp LGUI       &kp ENTER  &none      &kp H  &kp J  &kp K      &kp L    &hm 2 SEMICOLON  &kp ENTER
&none          &kp Z    &kp X    &kp C      &kp V    &kp B                        &kp DELETE            &kp RIGHT_ALT                        &kp N  &kp M  &kp COMMA  &kp DOT  &kp EQUAL        &none
&tog 0         &none    &none    &none      &none           &sl 1  &sl 6          &kp LCTRL             &kp LCTRL      &sl 6      &kp SPACE         &none  &none      &none    &none            &kp CAPSLOCK
            >;
        };

        Symbols_1 {
            bindings = <
&trans      &trans  &trans  &trans                 &trans              &trans            &trans                                      &trans   &trans             &trans                &trans                 &trans             &trans           &trans
&trans      &trans  &trans  &right_eq_arrow_macro  &right_arrow_macro  &kp GRAVE         &trans                                      &trans   &kp TILDE          &kp UNDERSCORE        &kp MINUS              &kp DOUBLE_QUOTES  &kp SQT          &trans
&kp DELETE  &trans  &trans  &kp BACKSLASH          &kp SLASH           &kp LEFT_BRACKET  &trans  &trans  &trans      &trans  &trans  &trans   &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE     &kp RIGHT_BRACE  &trans
&trans      &trans  &trans  &trans                 &trans              &trans                            &trans      &trans                   &trans             &kp AMPERSAND         &kp ASTERISK           &kp PIPE           &kp QUESTION     &trans
&trans      &trans  &trans  &trans                 &trans                                &trans  &trans  &trans      &trans  &trans  &kp TAB                     &trans                &trans                 &trans             &trans           &trans
            >;
        };

        Symbols_2 {
            bindings = <
&trans  &trans           &trans       &trans    &trans      &trans       &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans       &trans    &trans      &kp CARET    &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans       &trans    &trans      &trans                       &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans       &trans    &trans                   &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Digits {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans        &trans        &trans        &trans  &trans
            >;
        };

        Fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &kp F10  &kp F11  &kp F12  &kp F13  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &kp F7   &kp F8   &kp F9   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp F4   &kp F5   &kp F6   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp F1   &kp F2   &kp F3   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans   &trans   &trans   &trans   &trans
            >;
        };

        Arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans    &trans          &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &kp HOME  &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans    &trans          &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans            &trans          &trans        &trans     &trans  &trans
            >;
        };

        Shift {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans     &trans                                             &trans  &trans     &trans     &trans         &trans          &trans             &trans
&trans  &kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)  &trans                                             &trans  &kp LS(Y)  &kp LS(U)  &kp LS(I)      &kp LS(O)       &kp LS(P)          &trans
&trans  &kp LS(A)  &kp LS(S)  &kp LS(D)  &kp LS(F)  &kp LS(G)  &trans  &trans  &trans      &trans         &trans  &trans  &kp LS(H)  &kp LS(J)  &kp LS(K)      &kp LS(L)       &kp LS(SEMICOLON)  &kp LS(ENTER)
&trans  &kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)                  &trans      &trans                         &kp LS(N)  &kp LS(M)  &kp LS(COMMA)  &kp LS(PERIOD)  &kp LS(EQUAL)      &trans
&trans  &trans     &trans     &trans     &trans                &trans  &trans  &trans      &kp LS(ENTER)  &trans  &trans             &trans     &trans         &trans          &trans             &trans
            >;
        };

        Maestro {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans                  &trans                        &trans                        &trans                        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans                  &kp LC(LA(LS(LG(N7))))        &kp LC(LA(LS(LG(N8))))        &kp LC(LA(LS(LG(N9))))        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LC(LA(LS(LG(N0))))  &kp LC(LA(LS(LG(NUMBER_4))))  &kp LC(LA(LS(LG(N5))))        &kp LC(LA(LS(LG(NUMBER_6))))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans                  &kp LC(LA(LS(LG(NUMBER_1))))  &kp LC(LA(LS(LG(NUMBER_2))))  &kp LC(LA(LS(LG(NUMBER_3))))  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                          &trans                        &trans                        &trans                        &trans  &trans
            >;
        };

        windows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans      &trans            &trans            &trans            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans      &kp LG(N7)        &kp LG(N8)        &kp LG(N9)        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LG(N0)  &kp LG(NUMBER_4)  &kp LG(N5)        &kp LG(NUMBER_6)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans      &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans              &trans            &trans            &trans            &trans  &trans
            >;
        };
    };
};
